//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using EntityLayer;
    public partial class FacturacionDBEntities : DbContext
    {
        private static FacturacionDBEntities db;
        public FacturacionDBEntities()
            : base("name=FacturacionDBEntities")
        {
        }

        public static FacturacionDBEntities getInstance()
        {
            if(db == null)
            {
                db = new FacturacionDBEntities();
                return db;
            }
            return db;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CUSTOMER> CUSTOMERS { get; set; }
        public virtual DbSet<INVOICE_ITEMS> INVOICE_ITEMS { get; set; }
        public virtual DbSet<INVOICE> INVOICES { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTS { get; set; }
        public virtual DbSet<STOCK> STOCKs { get; set; }
        public virtual DbSet<STOCK_ENTRY> STOCK_ENTRY { get; set; }
        public virtual DbSet<SUPPLIER> SUPPLIERS { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<GetSales_Result> GetSales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSales_Result>("GetSales");
        }
    
        public virtual ObjectResult<GetStockData_Result> GetStockData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockData_Result>("GetStockData");
        }
    
        public virtual ObjectResult<GetStockEntryData_Result> GetStockEntryData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockEntryData_Result>("GetStockEntryData");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
